From 3da4bb2f70c4a15d1d61187e89d2f28ab33ca383 Mon Sep 17 00:00:00 2001
From: Philippe Nunes <philippe.nunes@linux.intel.com>
Date: Fri, 21 Sep 2012 16:46:54 +0200
Subject: [PATCH 07/23] s_sim: Get the SIM type when SIM is ready
Content-Type: text/plain; charset="utf-8"
Content-Transfer-Encoding: 8bit

---
 src/s_sim.c |   33 +++++++++++++++------------------
 1 file changed, 15 insertions(+), 18 deletions(-)

diff --git a/src/s_sim.c b/src/s_sim.c
index 5ab702a..1d7e5c6 100644
--- a/src/s_sim.c
+++ b/src/s_sim.c
@@ -98,7 +98,6 @@ struct s_sim_property {
 	int rec_count; /**< Number of records in file */
 	int data_size; /**< File size */
 	int current_index; /**< current index to read */
-	enum tel_sim_status first_recv_status;
 	enum s_sim_sec_op_e current_sec_op; /**< current index to read */
 	struct tel_sim_mbi_list mbi_list;
 	struct tel_sim_mb_number mb_list[SIM_MSP_CNT_MAX*5];
@@ -841,7 +840,13 @@ static void _response_get_sim_type(TcorePending *p, int data_len, const void *da
 	}
 
 	tcore_sim_set_type(co_sim, sim_type);
-	_sim_status_update(co_sim, sp->first_recv_status);
+
+	if (sim_type != SIM_TYPE_UNKNOWN) {
+		/* set user request for using ur metainfo set/ref functionality */
+		ur = tcore_user_request_new(NULL, NULL);
+		_get_file_info(co_sim, ur, SIM_EF_IMSI);
+	}
+
 	tcore_at_tok_free(tokens);
 	dbg(" Function exit");
 }
@@ -1921,7 +1926,6 @@ OUT:
 
 static gboolean on_event_pin_status(CoreObject *o, const void *event_info, void *user_data)
 {
-	UserRequest *ur = NULL;
 	struct s_sim_property *sp = NULL;
 	enum tel_sim_status sim_status = SIM_STATUS_INITIALIZING;
 	GSList *tokens = NULL;
@@ -1986,7 +1990,7 @@ static gboolean on_event_pin_status(CoreObject *o, const void *event_info, void
 
 	case 7:                                                         // sim state = ready for attach (+COPS)
 		sim_status = SIM_STATUS_INIT_COMPLETED;
-		dbg("Modem init completed");
+		dbg("SIM is ready for attach");
 		break;
 
 	case 8:                                                         // sim state = SIM Technical Problem
@@ -2015,8 +2019,10 @@ static gboolean on_event_pin_status(CoreObject *o, const void *event_info, void
 
 	switch (sim_status) {
 	case SIM_STATUS_INIT_COMPLETED:
-		ur = tcore_user_request_new(NULL, NULL);     // this is for using ur metainfo set/ref functionality.
-		_get_file_info(o, ur, SIM_EF_IMSI);
+		if (tcore_sim_get_type(o) == SIM_TYPE_UNKNOWN)
+			_get_sim_type(o);
+		else
+			_sim_status_update(o, sim_status);
 		break;
 
 	case SIM_STATUS_INITIALIZING:
@@ -2028,17 +2034,7 @@ static gboolean on_event_pin_status(CoreObject *o, const void *event_info, void
 	case SIM_STATUS_SPCK_REQUIRED:
 	case SIM_STATUS_CCK_REQUIRED:
 	case SIM_STATUS_LOCK_REQUIRED:
-		if (sp->first_recv_status == SIM_STATUS_UNKNOWN) {
-			dbg("first received sim status[%d]", sim_status);
-			sp->first_recv_status = sim_status;
-			_get_sim_type(o);
-		} else {
-			dbg("second or later received lock status[%d]", sim_status);
-			if (tcore_sim_get_status(o) != SIM_STATUS_INIT_COMPLETED) {
-				dbg("sim is not init complete in telephony side yet");
-				_sim_status_update(o, sim_status);
-			}
-		}
+		_sim_status_update(o, sim_status);
 		break;
 
 	case SIM_STATUS_CARD_REMOVED:
@@ -2048,6 +2044,8 @@ static gboolean on_event_pin_status(CoreObject *o, const void *event_info, void
 			dbg("[SIM]SIM CARD REMOVED!!");
 			sim_status = SIM_STATUS_CARD_REMOVED;
 		}
+
+		tcore_sim_set_type(o, SIM_TYPE_UNKNOWN);
 		_sim_status_update(o, sim_status);
 		break;
 
@@ -3332,7 +3330,6 @@ gboolean s_sim_init(TcorePlugin *p, TcoreHal *h)
 	work_queue = g_queue_new();
 	tcore_object_link_user_data(o, work_queue);
 
-	file_meta->first_recv_status = SIM_STATUS_UNKNOWN;
 	tcore_sim_link_userdata(o, file_meta);
 
 	tcore_object_add_callback(o, "+XLOCK", on_event_facility_lock_status, NULL);
-- 
1.7.10.4

